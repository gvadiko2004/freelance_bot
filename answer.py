from telethon import TelegramClient, events
import asyncio

# ===== –ù–ê–°–¢–†–û–ô–ö–ò =====
api_id = 21882740
api_hash = "c80a68894509d01a93f5acfeabfdd922"
PHONE_NUMBER = "+380634646075"

BOT_TOKEN = "6566504110:AAFK9hA4jxZ0eA7KZGhVvPe8mL2HZj2tQmE"
ALERT_CHAT_ID = 1168962519

SOURCE_CHAT = "FreelancehuntProjects"

KEYWORDS = [
    "#html_–∏_css_–≤–µ—Ä—Å—Ç–∫–∞",
    "#–≤–µ–±_–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "#cms",
    "#–∏–Ω—Ç–µ—Ä–Ω–µ—Ç_–º–∞–≥–∞–∑–∏–Ω—ã_–∏_—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è_–∫–æ–º–º–µ—Ä—Ü–∏—è",
    "#—Å–æ–∑–¥–∞–Ω–∏–µ_—Å–∞–π—Ç–∞_–ø–æ–¥_–∫–ª—é—á",
    "#–¥–∏–∑–∞–π–Ω_—Å–∞–π—Ç–æ–≤"
]
KEYWORDS = [k.lower() for k in KEYWORDS]

# ===== –ö–ª–∏–µ–Ω—Ç—ã =====
user_client = TelegramClient("user_session", api_id, api_hash)
bot_client = TelegramClient("bot_session", api_id, api_hash)

# ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ =====
async def check_and_forward(message):
    text = (message.text or "").lower()
    if any(k in text for k in KEYWORDS):
        try:
            await bot_client.forward_messages(ALERT_CHAT_ID, message)
            print(f"[FORWARDED] {text[:50]}...")
        except Exception as e:
            print(f"[ERROR FORWARDING] {e}")

# ===== –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π =====
@user_client.on(events.NewMessage(chats=SOURCE_CHAT))
async def handler(event):
    await check_and_forward(event.message)

# ===== –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è =====
async def main():
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    await user_client.start(phone=PHONE_NUMBER)
    await bot_client.start(bot_token=BOT_TOKEN)
    print("‚úÖ USER –∏ BOT –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã")

    # –¢–µ—Å—Ç: –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
    print("üîç –¢–µ—Å—Ç ‚Äî –±–µ—Ä—É –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π...")
    messages = await user_client.get_messages(SOURCE_CHAT, limit=10)
    for msg in messages:
        await check_and_forward(msg)

    print("üëÅ –¢–µ–ø–µ—Ä—å —Å–ª—É—à–∞—é –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await user_client.run_until_disconnected()

# ===== –ó–∞–ø—É—Å–∫ =====
loop = asyncio.get_event_loop()
loop.run_until_complete(main())
