#!/usr/bin/env python3
# coding: utf-8

import asyncio, re
from telethon import TelegramClient, events
from telegram import Bot

# --- CONFIG ---
API_ID = 21882740
API_HASH = "c80a68894509d01a93f5acfeabfdd922"
BOT_TOKEN = "6566504110:AAFK9hA4jxZ0eA7KZGhVvPe8mL2HZj2tQmE"
OWNER_ID = 1168962519  # —Ç–≤–æ–π Telegram ID

# –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–ø–æ–∏—Å–∫ –≤–µ–¥–µ—Ç—Å—è –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
KEYWORDS = [k.lower() for k in [
    "#html_–∏_css_–≤–µ—Ä—Å—Ç–∫–∞",
    "#–≤–µ–±_–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "#cms",
    "#–∏–Ω—Ç–µ—Ä–Ω–µ—Ç_–º–∞–≥–∞–∑–∏–Ω—ã_–∏_—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è_–∫–æ–º–º–µ—Ä—Ü–∏—è",
    "#—Å–æ–∑–¥–∞–Ω–∏–µ_—Å–∞–π—Ç–∞_–ø–æ–¥_–∫–ª—é—á",
    "#–¥–∏–∑–∞–π–Ω_—Å–∞–π—Ç–æ–≤"
]]

# --- INIT ---
tg_client = TelegramClient("session", API_ID, API_HASH)
alert_bot = Bot(token=BOT_TOKEN)

# --- HELPERS ---
def extract_links(msg):
    """–ò—â–µ—Ç —Å—Å—ã–ª–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ –∏ –≤ –∫–Ω–æ–ø–∫–∞—Ö"""
    text = msg.message or ""
    links = []

    # —Å—Å—ã–ª–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
    urls = re.findall(r"https?://[^\s)]+", text)
    links.extend(urls)

    # —Å—Å—ã–ª–∫–∏ –∏–∑ inline –∫–Ω–æ–ø–æ–∫
    try:
        for row in getattr(msg, "buttons", []) or []:
            for btn in row:
                url = getattr(btn, "url", None)
                if url:
                    links.append(url)
    except:
        pass

    # —É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ **–∑–≤—ë–∑–¥–æ—á–∫–∏**
    clean = []
    for link in links:
        link = link.replace("*", "").strip()
        if link not in clean:
            clean.append(link)

    return clean

# --- MAIN HANDLER ---
@tg_client.on(events.NewMessage)
async def handle_message(event):
    text = (event.message.text or "").lower()
    if not any(k in text for k in KEYWORDS):
        return  # –µ—Å–ª–∏ –Ω–µ—Ç –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ ‚Äî –≤—ã—Ö–æ–¥–∏–º

    links = extract_links(event.message)
    msg_text = event.message.text or ""

    report = f"üîç –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É!\n\n"
    report += f"üë§ –û—Ç: {event.chat.title if event.chat else '–ª–∏—á–∫–∞'}\n\n"
    report += f"üìÑ –¢–µ–∫—Å—Ç:\n{msg_text}\n\n"

    if links:
        report += "üîó –°—Å—ã–ª–∫–∏:\n" + "\n".join(links)
    else:
        report += "‚ùå –°—Å—ã–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

    try:
        await alert_bot.send_message(chat_id=OWNER_ID, text=report)
        print(f"[INFO] –ü–µ—Ä–µ—Å–ª–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {event.id}")
    except Exception as e:
        print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

# --- MAIN LOOP ---
async def main():
    await tg_client.start()
    print("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Telegram –∑–∞–ø—É—â–µ–Ω...")
    await tg_client.run_until_disconnected()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞")
