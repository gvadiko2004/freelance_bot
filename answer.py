import asyncio
from telethon import TelegramClient, events

# ===== –¢–í–û–ò –î–ê–ù–ù–´–ï =====
api_id = 21882740
api_hash = "c80a68894509d01a93f5acfeabfdd922"
PHONE_NUMBER = "+380634646075"  # –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

BOT_TOKEN = "6566504110:AAFK9hA4jxZ0eA7KZGhVvPe8mL2HZj2tQmE"
ALERT_CHAT_ID = 1168962519  # —Ç–≤–æ–π Telegram ID

SOURCE_CHAT = "FreelancehuntProjects"  # –∫–∞–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π —Å–ª—É—à–∞–µ–º

KEYWORDS = [
    "wordpress", "–≤–µ—Ä—Å—Ç–∫–∞", "–ª–µ–Ω–¥–∏–Ω–≥", "—Å–∞–π—Ç", 
    "figma", "html", "css", "shopify"
]
KEYWORDS = [k.lower() for k in KEYWORDS]

# ===== Telethon User Client =====
user_client = TelegramClient("user_session", api_id, api_hash)
bot_client = TelegramClient("bot_session", api_id, api_hash).start(bot_token=BOT_TOKEN)

# ===== –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ =====
async def check_and_forward(message):
    text = (message.text or "").lower()
    if any(k in text for k in KEYWORDS):
        try:
            await bot_client.forward_messages(ALERT_CHAT_ID, message)
            print(f"[TEST-FORWARD] –ü–µ—Ä–µ—Å–ª–∞–Ω–æ: {text[:50]}...")
        except Exception as e:
            print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å: {e}")

# ===== LIVE –û–±—Ä–∞–±–æ—Ç—á–∏–∫ =====
@user_client.on(events.NewMessage(chats=SOURCE_CHAT))
async def handler(event):
    await check_and_forward(event.message)

# ===== –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ =====
async def test_run():
    print("üîç –¢–µ—Å—Ç ‚Äî –±–µ—Ä—É –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞...")
    async for msg in user_client.get_messages(SOURCE_CHAT, limit=3):
        await check_and_forward(msg)

# ===== –ó–∞–ø—É—Å–∫ =====
async def main():
    print("‚úÖ –ó–∞–ø—É—Å–∫...")
    await user_client.start(phone=PHONE_NUMBER)
    print("üë§ USER –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
    print("ü§ñ BOT –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")

    # –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
    await test_run()
    print("‚è≥ –¢–µ–ø–µ—Ä—å –±–æ—Ç —Å–ª—É—à–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")

    await user_client.run_until_disconnected()

asyncio.run(main())
