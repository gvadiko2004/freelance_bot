import asyncio
import re
from telethon import TelegramClient, events, Button
from telegram import Bot

# ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ =====
api_id = 21882740
api_hash = "c80a68894509d01a93f5acfeabfdd922"
SESSION_NAME = "session"

BOT_TOKEN = "6566504110:AAFK9hA4jxZ0eA7KZGhVvPe8mL2HZj2tQmE"
ALERT_CHAT_ID = 1168962519  # —Ç–≤–æ–π Telegram ID

TARGET_USERNAME = "achie_81"  # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á—å–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ª—É—à–∞–µ–º

KEYWORDS = [
    "#html_–∏_css_–≤–µ—Ä—Å—Ç–∫–∞",
    "#–≤–µ–±_–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "#cms",
    "#–∏–Ω—Ç–µ—Ä–Ω–µ—Ç_–º–∞–≥–∞–∑–∏–Ω—ã_–∏_—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è_–∫–æ–º–º–µ—Ä—Ü–∏—è",
    "#—Å–æ–∑–¥–∞–Ω–∏–µ_—Å–∞–π—Ç–∞_–ø–æ–¥_–∫–ª—é—á",
    "#–¥–∏–∑–∞–π–Ω_—Å–∞–π—Ç–æ–≤"
]
KEYWORDS = [kw.lower() for kw in KEYWORDS]

# ===== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è =====
alert_bot = Bot(token=BOT_TOKEN)
client = TelegramClient(SESSION_NAME, api_id, api_hash)

# ===== –§—É–Ω–∫—Ü–∏–∏ =====
async def send_alert(text):
    try:
        await alert_bot.send_message(chat_id=ALERT_CHAT_ID, text=text)
        print(f"[INFO] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:\n{text}")
    except Exception as e:
        print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

def extract_links(text):
    return re.findall(r'https?://[^\s]+', text)

async def process_buttons(event):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫–∏ –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤"""
    buttons = event.message.buttons or []
    for row in buttons:
        for button in row:
            if isinstance(button, Button):
                try:
                    # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É
                    response = await event.click(button)
                    if response and response.text:
                        links = extract_links(response.text)
                        if links:
                            for link in links:
                                await send_alert(f"üîó –°—Å—ã–ª–∫–∞ —Å –∫–Ω–æ–ø–∫–∏:\n{link}")
                except Exception as e:
                    print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É: {e}")

# ===== –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π =====
@client.on(events.NewMessage(chats=TARGET_USERNAME))
async def handler(event):
    text = (event.message.text or "").lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if any(k in text for k in KEYWORDS):
        await send_alert(f"üîî –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º:\n{event.message.text}")

        # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ ‚Äî –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Ö
        await process_buttons(event)

# ===== –ó–∞–ø—É—Å–∫ =====
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
    await client.start()
    await send_alert("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())
