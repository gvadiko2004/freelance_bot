import asyncio
import re
import requests
from telethon import TelegramClient, events, Button
from telethon.sessions import StringSession

# ===== –ù–ê–°–¢–†–û–ô–ö–ò =====
api_id = 21882740
api_hash = "c80a68894509d01a93f5acfeabfdd922"
PHONE_NUMBER = "+380634646075"

BOT_TOKEN = "6566504110:AAFK9hA4jxZ0eA7KZGhVvPe8mL2HZj2tQmE"
ALERT_CHAT_ID = 1168962519

SOURCE_CHAT = "FreelancehuntProjects"

KEYWORDS = [
    "#html_–∏_css_–≤–µ—Ä—Å—Ç–∫–∞",
    "#–≤–µ–±_–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "#cms",
    "#–∏–Ω—Ç–µ—Ä–Ω–µ—Ç_–º–∞–≥–∞–∑–∏–Ω—ã_–∏_—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è_–∫–æ–º–º–µ—Ä—Ü–∏—è",
    "#—Å–æ–∑–¥–∞–Ω–∏–µ_—Å–∞–π—Ç–∞_–ø–æ–¥_–∫–ª—é—á",
    "#–¥–∏–∑–∞–π–Ω_—Å–∞–π—Ç–æ–≤"
]
KEYWORDS = [k.lower() for k in KEYWORDS]

# ===== –ö–ª–∏–µ–Ω—Ç User =====
# StringSession —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ sqlite
user_client = TelegramClient(StringSession(), api_id, api_hash)

# ===== –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Bot API =====
def send_to_bot(text):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {"chat_id": ALERT_CHAT_ID, "text": text, "disable_web_page_preview": False}
    try:
        requests.post(url, data=data)
    except Exception as e:
        print(f"[ERROR BOT SEND] {e}")

# ===== –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ =====
def extract_links(text):
    return re.findall(r'https?://[^\s]+', text or "")

# ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ =====
async def check_and_forward(message):
    text = message.text or ""
    lower_text = text.lower()

    if any(k in lower_text for k in KEYWORDS):
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
        send_to_bot(f"üîî –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{text}")

        # –°—Å—ã–ª–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
        for link in extract_links(text):
            send_to_bot(f"üîó –°—Å—ã–ª–∫–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞:\n{link}")

        # –°—Å—ã–ª–∫–∏ –∏–∑ –∫–Ω–æ–ø–æ–∫
        buttons = message.buttons or []
        for row in buttons:
            for button in row:
                if isinstance(button, Button) and hasattr(button, "url") and button.url:
                    send_to_bot(f"üîó –°—Å—ã–ª–∫–∞ —Å –∫–Ω–æ–ø–∫–∏:\n{button.url}")

        print(f"[SENT TO BOT] {text[:50]}...")

# ===== –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π =====
@user_client.on(events.NewMessage(chats=SOURCE_CHAT))
async def handler(event):
    await check_and_forward(event.message)

# ===== –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è =====
async def main():
    await user_client.start(phone=PHONE_NUMBER)
    print("‚úÖ USER –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")

    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
    print("üîç –¢–µ—Å—Ç ‚Äî –±–µ—Ä—É –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π...")
    messages = await user_client.get_messages(SOURCE_CHAT, limit=10)
    for msg in messages:
        await check_and_forward(msg)

    print("üëÅ –¢–µ–ø–µ—Ä—å —Å–ª—É—à–∞—é –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await user_client.run_until_disconnected()

# ===== –ó–∞–ø—É—Å–∫ =====
if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    try:
        loop.run_until_complete(main())
    finally:
        print("üîí –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞...")
        loop.run_until_complete(user_client.disconnect())
